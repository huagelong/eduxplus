parameters:
services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false
        bind:
            $adminUserMobile: '%env(ADMIN_USER_MOBILE)%'
            $adminUserPwd: '%env(ADMIN_USER_PWD)%'

    Eduxplus\CoreBundle\:
        resource: '../../../src/'
        exclude: '../../../src/**/{DependencyInjection,Migrations,Resources,Twig,Entity,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Eduxplus\CoreBundle\Controller\:
        resource: '../../../src/Controller/'
        tags: [ 'controller.service_arguments' ]

    Eduxplus\CoreBundle\Lib\Base\BaseService:
        calls:
            - [inject, ["@doctrine","@serializer",
                      "@request_stack","@router.default",
                      "@parameter_bag","@property_accessor",
                      "@security.token_storage","@service_container"]]

    Eduxplus\CoreBundle\Service\:
        resource: '../../../src/Service/'
        calls:
            - [inject, ["@doctrine","@serializer",
                      "@request_stack","@router.default",
                      "@parameter_bag","@property_accessor",
                        "@security.token_storage","@service_container"]]


    Eduxplus\CoreBundle\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }
            
    admin.getProp.twig.extension:
        class: Eduxplus\CoreBundle\Twig\GetPropExtension
        tags:
            - { name: twig.extension }

    admin.isAuthorized.twig.extension:
        class: Eduxplus\CoreBundle\Twig\IsAuthorizedExtension
        arguments: ['@Eduxplus\CoreBundle\Service\RoleService']
        tags:
            - { name: twig.extension }

    Eduxplus\CoreBundle\Lib\Service\RedisService:
        lazy: true
        arguments:
            $redisCLient: '@snc_redis.default'

    Eduxplus\CoreBundle\Lib\Service\CacheService:
        public: true
        lazy: true
        arguments:
            $cacheCLient: '@snc_redis.cache'

    Eduxplus\CoreBundle\Twig\FuncExtension:
        tags: [ 'twig.extension' ]

    Eduxplus\CoreBundle\Twig\FiltersExtension:
        tags: [ 'twig.extension' ]
